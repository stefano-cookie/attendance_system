// frontend/src/scss/_mixins.scss
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
    transition: $property $duration $timing;
  }
  
  @mixin box-shadow($shadow: $box-shadow) {
    box-shadow: $shadow;
  }
  
  @mixin border-radius($radius: $border-radius) {
    border-radius: $radius;
  }
  
  @mixin clearfix() {
    &::after {
      display: block;
      clear: both;
      content: '';
    }
  }
  
  @mixin text-truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  @mixin hover() {
    &:hover {
      @content;
    }
  }
  
  @mixin hover-focus() {
    &:hover,
    &:focus {
      @content;
    }
  }
  
  @mixin media-breakpoint-up($breakpoint) {
    @if $breakpoint == sm {
      @media (min-width: $breakpoint-sm) { @content; }
    } @else if $breakpoint == md {
      @media (min-width: $breakpoint-md) { @content; }
    } @else if $breakpoint == lg {
      @media (min-width: $breakpoint-lg) { @content; }
    } @else if $breakpoint == xl {
      @media (min-width: $breakpoint-xl) { @content; }
    }
  }
  
  @mixin media-breakpoint-down($breakpoint) {
    @if $breakpoint == xs {
      @media (max-width: $breakpoint-sm - 1) { @content; }
    } @else if $breakpoint == sm {
      @media (max-width: $breakpoint-md - 1) { @content; }
    } @else if $breakpoint == md {
      @media (max-width: $breakpoint-lg - 1) { @content; }
    } @else if $breakpoint == lg {
      @media (max-width: $breakpoint-xl - 1) { @content; }
    }
  }
  
  @mixin gradient-bg($color) {
    background: $color linear-gradient(180deg, mix($white, $color, 15%), $color) repeat-x;
  }
  
  @mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%), $active-background: darken($background, 10%), $active-border: darken($border, 12.5%)) {
    color: color-contrast($background);
    background-color: $background;
    border-color: $border;
  
    @include hover() {
      color: color-contrast($hover-background);
      background-color: $hover-background;
      border-color: $hover-border;
    }
  
    &:focus,
    &.focus {
      color: color-contrast($hover-background);
      background-color: $hover-background;
      border-color: $hover-border;
    }
  
    &:active,
    &.active {
      color: color-contrast($active-background);
      background-color: $active-background;
      border-color: $active-border;
    }
  }
  
  @function color-contrast($color) {
    $r: red($color);
    $g: green($color);
    $b: blue($color);
    
    $yiq: (($r*299) + ($g*587) + ($b*114))/1000;
    
    @if ($yiq >= 150) {
      @return #000000;
    } @else {
      @return #ffffff;
    }
  }